# with语句
"""
1.with在读取文件时的作用：读取文件失败时会自动关闭文件，如果使用try..except..finally块
    也能实现该效果，但代码更冗长
2.
with open('error.log', 'r') as f:  # 只读的形式打开文件
    f.write('aa')  # 对只读文件进行了写入操作会报错
# 无论是否报错，with语句最后都会关闭打开的文件
    """


import copy  # 拷贝需要导入copy模块
# 深浅拷贝
# 浅拷贝 copy.copy(变量)
"""
1.不可变类型（基本数据类型、字符串）
    ①copy.copy()拷贝不可变类型数据，其地址与原数据地址【不同】
2.可变类型（列表、集合、字典）：
    ②copy.copy()拷贝可变类型数据，地址与原地址【也不同】
    ③待解决的问题：在可变类型存在数据嵌套的情况下(如字典中嵌套列表)，
                 修改拷贝后的嵌套数据，【原数据会改变】
"""
# 深拷贝 copy.deepcopy(变量)
"""
1.深拷贝解决了浅拷贝嵌套可变类型遇到的问题。
"""


import re  # 需要导入re模块
# 正则表达式
"""
1.概念：记录文本规则的代码
2.作用：查找/匹配的字符串存在某种规律时可以使用正则表达式
3.正则表达式：
    ①任意一个字符：.
    ②指定范围内的一个字符：[a-z0-9]  # 匹配a-z或0-9中的字符
    ③匹配一个数字：\d
    ④匹配一个非数字：\D
    ⑤匹配
"""
a = 'wfenogegrbr'
b = '081-13744443333'
c = 'abc@qq.com'
d = 'www.baidu.com/login'
e = '这里是China'
try:
    result = re.match('[a-z]*', c)  # 没匹配到返回None
    print(result.group())
except:
    print('未匹配到数据。')
