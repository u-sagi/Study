import math
# 模块
'''
导入方式：
--- import 模块名 [as 别名]
--- from 模块名 import *
--- from 模块名 import 功能名 [as 别名]
1.导入时文件会先被执行一遍，函数调用、分支/循环语句都无法导入（导入时就会被执行）
'''

# 自定义模块
'''
1.自定义模块可以写全局变量、函数、类
2.文件名要符合标识符命名规则
3.模块名要见名知意
4.实现在模块中内部执行（用于调试），导入时不会被执行：
 # 输入main再回车会自动生成
 if __name__ == '__main__':  # 判断当前文件是否为执行文件
    调试代码
'''
print(math.pi)  # 全局变量
print(math.cos(math.pi))  # 函数

# 模块的定位顺序
'''
import sys
print(sys.path)
1.sys.path返回一个路径列表，在调用模块时越靠前越优先查找。（模块名同名时的调用顺序）
2.在开发中自己可以添加路径
'''

# __all__作用
'''
模块名中定格书写：
  __all__ = ['功能名1', ...]
1.__all__可以控制 from 模块名 import * 导入特定功能

'''

# 包
'''
包：包含多个有关联的模块的文件夹，且其中会有一个__init__.py文件
1.导入包
--- import 包名.模块名
--- from 包名 import * 导入所有模块名
2.导入包后对应的调用方法
--- 包名.模块名.功能名
--- 模块名.功能名
3. 在包中的__init__.py文件中加入__all__=[...]控制 from 包名 import * 导入的模块
'''